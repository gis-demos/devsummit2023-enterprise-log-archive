name: DockerBuild.LambdaImage

on:
  # push:
  #   branches: [main]
  # allow it to be run on-demand
  workflow_dispatch:

jobs:
  build-and-push:
    name: Build Docker image and push to repositories
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          # update with your ecr uri
          images: |
            690202643275.dkr.ecr.us-east-1.amazonaws.com/arcgis-python-api-lambda-helloworld
          tags: |
            type=raw,value=latest
            type=sha,format=long

      - id: docker_build
        name: Build image and push to AWS ECR
        uses: docker/build-push-action@v4
        with:
          # relative path to the place where source code with Dockerfile is located
          context: .
          file: ./Dockerfile
          tags: ${{ steps.meta.outputs.tags }}
          provenance: false
          platforms: linux/amd64
          push: true